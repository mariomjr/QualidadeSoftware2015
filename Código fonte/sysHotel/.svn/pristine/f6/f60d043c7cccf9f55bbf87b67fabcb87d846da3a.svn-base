package org.sysHotel.controller;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.event.ActionEvent;
import javax.inject.Inject;

import org.primefaces.event.SelectEvent;
import org.primefaces.model.LazyDataModel;
import org.primefaces.model.SortOrder;
import org.sysHotel.dao.PerfilAcessoDaoImpl;
import org.sysHotel.entity.PerfilAcesso;
import org.sysHotel.entity.Quarto;
import org.sysHotel.enums.Role;
import org.sysHotel.interfaces.ICrudPrimeFaces;

@ManagedBean(name="perfilAcessoBean")
@SessionScoped
public class PerfilAcessoBean implements Serializable, ICrudPrimeFaces<Quarto>{

	private static final long serialVersionUID = -7641605827038814332L;

	private List<Role> listRoles;
	
	@Inject
	PerfilAcessoDaoImpl perfilAcessoDao;
	
	PerfilAcesso perfilAcesso;
	
	PerfilAcesso perfilAcessoSelect;
	
	List<PerfilAcesso> listPerfilAcessos;
	
	private LazyDataModel<PerfilAcesso> lazyListPerfilAcesso;
	
	public PerfilAcessoBean() {
		if (lazyListPerfilAcesso == null) {
			lazyListPerfilAcesso = new LazyDataModel<PerfilAcesso>() {

				private static final long serialVersionUID = 1L;

				@Override
				public List<PerfilAcesso> load(int first, int pageSize,String sortField, SortOrder sortOrder,Map<String, String> filters) {
					List<PerfilAcesso> l = perfilAcessoDao.getRegistros();
					setRowCount(l.size());
					return l;
				}

				@Override
				public PerfilAcesso getRowData(String rowKey) {
					if(rowKey != null && !rowKey.equals("null")){
						return perfilAcessoDao.getRegistroID(Long.valueOf(rowKey));
					}else{
						return new PerfilAcesso();
					}
				}

				@Override
				public Object getRowKey(PerfilAcesso object) {
					return object.getId();
				}
			};
		}
	}

	
	@Override
	public void prepararAlterarRegistro(ActionEvent actionEvent) {
		setPerfilAcesso(getPerfilAcessoSelect());
		
	}

	@Override
	public void prepararNovoRegistro(ActionEvent actionEvent) {
		setPerfilAcesso(new PerfilAcesso());
	}

	@Override
	public void salvarAlterar(ActionEvent actionEvent) {
		if(getPerfilAcesso().getId()== null){
			perfilAcessoDao.salvar(getPerfilAcesso());
		}else{
			perfilAcessoDao.update(getPerfilAcesso());
		}
	}

	@Override
	public void onRowSelect(SelectEvent event) {
		
	}

	@Override
	public void delete(ActionEvent actionEvent) {
		
		
	}
	
	public List<Role> getListRoles() {
		return listRoles;
	}

	public void setListRoles(List<Role> listRoles) {
		this.listRoles = listRoles;
	}

	public PerfilAcesso getPerfilAcesso() {
		if(perfilAcesso == null){
			perfilAcesso = new PerfilAcesso();
		}
		return perfilAcesso;
	}

	public void setPerfilAcesso(PerfilAcesso perfilAcesso) {
		this.perfilAcesso = perfilAcesso;
	}

	public List<PerfilAcesso> getListPerfilAcessos() {
		if(listPerfilAcessos == null){
			listPerfilAcessos = new ArrayList<PerfilAcesso>();
		}
		return listPerfilAcessos;
	}

	public void setListPerfilAcessos(List<PerfilAcesso> listPerfilAcessos) {
		this.listPerfilAcessos = listPerfilAcessos;
	}


	public PerfilAcesso getPerfilAcessoSelect() {
		if(perfilAcessoSelect == null){
			perfilAcessoSelect = new PerfilAcesso();
		}
		return perfilAcessoSelect;
	}


	public void setPerfilAcessoSelect(PerfilAcesso perfilAcessoSelect) {
		this.perfilAcessoSelect = perfilAcessoSelect;
	}


	public LazyDataModel<PerfilAcesso> getLazyListPerfilAcesso() {
		return lazyListPerfilAcesso;
	}

	public void setLazyListPerfilAcesso(
			LazyDataModel<PerfilAcesso> lazyListPerfilAcesso) {
		this.lazyListPerfilAcesso = lazyListPerfilAcesso;
	}

}
